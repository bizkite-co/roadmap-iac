---
- name: Rollback certificate and Apache config changes
  hosts: "{{ target_host | default('UAT') }}" # Use a variable for the target host/group, defaulting to UAT
  become: yes
  user: ubuntu
  tasks:
    - name: Find all backup directories
      find:
        paths: "/etc/ssl/certs/"
        patterns: "backup_*"
        file_type: directory
        use_regex: yes
      register: backup_dirs

    - name: Set fact for the latest backup directory
      set_fact:
        latest_backup_dir: "{{ backup_dirs.files | sort(attribute='path') | last | default({}) }}"
      when: backup_dirs.files | length > 0

    - name: Fail if no backup directory is found
      fail:
        msg: "No backup directory found. Cannot perform rollback."
      when: latest_backup_dir == {}

    - name: Restore RetirementTaxAnalyzer cert file from backup
      copy:
        src: "{{ latest_backup_dir.path }}/retirementtaxanalyzer.crt.bak"
        dest: "/etc/ssl/certs/retirementtaxanalyzer.crt"
        remote_src: yes
        force: yes
        owner: root
        group: root
        mode: '0644'

    - name: Restore RoadmapPartners cert file from backup
      copy:
        src: "{{ latest_backup_dir.path }}/roadmapparterns.net.crt.bak"
        dest: "/etc/ssl/certs/roadmapparterns.net.crt"
        remote_src: yes
        force: yes
        owner: root
        group: root
        mode: '0644'

    - name: Restore Apache SSL configuration file from backup
      copy:
        src: "{{ latest_backup_dir.path }}/default-ssl.conf.bak"
        dest: "/etc/apache2/sites-available/default-ssl.conf"
        remote_src: yes
        force: yes
        owner: root
        group: root
        mode: '0644'

    - name: Test Apache configuration syntax
      command: apache2ctl configtest
      register: apache_config_test
      changed_when: apache_config_test.rc != 0
      failed_when: apache_config_test.rc != 0
      become: yes

    - name: Restart Apache
      service:
        name: apache2
        state: restarted
      become: yes

    - name: Verify rollback by checking served RetirementTaxAnalyzer certificate (Optional)
      shell: "openssl s_client -connect retirementtaxanalyzer.com:443 -servername retirementtaxanalyzer.com < /dev/null 2>/dev/null | openssl x509 -text -noout"
      register: retirementtaxanalyzer_cert_check_rollback
      ignore_errors: yes

    - name: Assert RetirementTaxAnalyzer certificate is the old one (Optional)
      assert:
        that:
          - "'Subject: CN = retirementtaxanalyzer.com' in retirementtaxanalyzer_cert_check_rollback.stdout"
          - "'Not After : Apr 19 16:41:12 2025 GMT' in retirementtaxanalyzer_cert_check_rollback.stdout" # Asserting for the old expiration date
        fail_msg: "RetirementTaxAnalyzer certificate rollback verification failed - still serving new cert or incorrect old cert."
      when: retirementtaxanalyzer_cert_check_rollback.rc == 0

    - name: Verify rollback by checking served RoadmapPartners certificate (Optional)
      shell: "openssl s_client -connect roadmappartners.net:443 -servername roadmappartners.net < /dev/null 2>/dev/null | openssl x509 -text -noout"
      register: roadmappartners_cert_check_rollback
      ignore_errors: yes

    - name: Assert RoadmapPartners certificate is the old one (Optional)
      assert:
        that:
          - "'Subject: CN = *.roadmappartners.net' in roadmappartners_cert_check_rollback.stdout"
          - "'Not After : May 15 18:00:29 2025 GMT' in roadmappartners_cert_check_rollback.stdout" # Asserting for the old expiration date
        fail_msg: "RoadmapPartners certificate rollback verification failed - still serving new cert or incorrect old cert."
      when: roadmappartners_cert_check_rollback.rc == 0